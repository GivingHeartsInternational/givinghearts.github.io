{"version":3,"sources":["components/TypeSelect.js","components/PokemonItem.js","components/PokemonCard.js","components/Pokedex.js","App.js","index.js"],"names":["TypeSelect","props","useState","types","setTypes","useEffect","fetch","then","response","json","result","className","name","onChange","e","setType","target","value","setCount","results","map","item","PokemonItem","setItem","load","setLoad","imageUrl","id","url","onClick","setCard","onLoad","alt","src","style","display","type","PokemonCard","card","index","length","stats","find","stat","weight","moves","Pokedex","count","items","setItems","resultObject","pokemon","forEach","push","limitedItems","slice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bce91a71.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nconst TypeSelect = (props) => {\r\n\r\n\tconst [types, setTypes] = useState({});\r\n\r\n\t//fetch types\r\n\tuseEffect(() => {\r\n\t\tfetch(`https://pokeapi.co/api/v2/type`)\r\n\t  \t.then(response => response.json())\r\n\t  \t.then(result => {\r\n\t  \t\tsetTypes(result);\r\n\t  \t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t\t<select className=\"type-select\" name='type-select' onChange={(e) => { props.setType(e.target.value); props.setCount(12) }}> {/* on select - set type and restart count  */}\r\n\t\t\t\t\t<option value=\"all\">All</option>\r\n\t\t\t\t\t\t{types.results ? types.results.map((item) => (\r\n\t\t\t\t\t<option key={item.name} value={item.name}>{item.name}</option>\r\n\t\t\t\t\t)) : null}\r\n\t\t\t}\r\n\t\t\t</select>\r\n\t\t);\r\n}\r\n\r\nexport default TypeSelect;","/*\r\n* Display pokemon item in list\r\n*/\r\n\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nconst PokemonItem = (props) => {\r\n\r\nconst [item, setItem] = useState({})\r\nconst [load, setLoad] = useState(false)\r\n\r\nconst imageUrl = `https://pokeres.bastionbot.org/images/pokemon/${item.id}.png`;\r\n\r\nuseEffect(() => {\r\n\tfetch(props.url)\r\n\t  .then(response => response.json())\r\n\t  .then(result => {\r\n\t  \tsetItem(result)\r\n\t  });\r\n\t}, []);\r\n\r\n\treturn(\r\n\t\t<div key={item.id} className='pokedex__item' onClick={() => props.setCard(item)} >\r\n\t\t\t<img className=\"item__image\" onLoad={() => setLoad(true)} alt=\"pokemon\" src={imageUrl} style={{display: load ? \"block\" : \"none\"}}  />\r\n\t\t\t<div className=\"preloader\" style={{display: load ? \"none\" : \"block\"}}></div>\r\n\r\n\t\t\t<h3>{item.name}</h3>\r\n\t\t\t<div className=\"types\">\r\n\t\t\t\t{item.types ? item.types.map((item) => (\r\n\t\t\t\t\t<div key={item.type.name} className={`types__item ${item.type.name}`}>{item.type.name}</div>\r\n\t\t\t\t)) : null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default PokemonItem;\r\n","import React from 'react';\r\n\r\nconst PokemonCard = (props) => {\r\n\r\n\tconst imageUrl = `https://pokeres.bastionbot.org/images/pokemon/${props.card.id}.png`;\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t{props.card.id ? \r\n\t\t<div className=\"pokedex__card\">\r\n\t\t\t<h2>Pokemon Card</h2>\r\n\t\t\t<div className=\"card__layout\">\r\n\t\t\t<div className=\"card__left\">\r\n\t\t\t\t<img className=\"card__image\"  alt=\"pokemon\" src={imageUrl}  />\r\n\t\t\t\t<h3>{props.card.name} #{props.card.id}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card__right\">\r\n\t\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Type</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t{props.card.types.map((item, index) => (\t\r\n\t\t\t\t\t\t\t<span className=\"card__type\" key={item.type.name}>{item.type.name}{props.card.types.length - 1 !== index ? \",\" : null} </span>))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Attack</td>\r\n\t\t\t\t\t<td>{(props.card.stats.find((item) => {return item.stat.name === 'attack'}))['base_stat']}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Defense</td>\r\n\t\t\t\t\t<td>{(props.card.stats.find((item) => {return item.stat.name === 'defense'}))['base_stat']}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>HP</td>\r\n\t\t\t\t\t<td>{(props.card.stats.find((item) => {return item.stat.name === 'hp'}))['base_stat']}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>SP Attack</td>\r\n\t\t\t\t\t<td>{(props.card.stats.find((item) => {return item.stat.name === 'special-attack'}))['base_stat']}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>SP Defense</td>\r\n\t\t\t\t\t<td>{(props.card.stats.find((item) => {return item.stat.name === 'special-defense'}))['base_stat']}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Speed</td>\r\n\t\t\t\t\t<td>{(props.card.stats.find((item) => {return item.stat.name === 'speed'}))['base_stat']}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Weight</td>\r\n\t\t\t\t\t<td>{props.card.weight}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Total Moves</td>\r\n\t\t\t\t\t<td>{props.card.moves.length}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t: null}\r\n\t\t</>\r\n\t\t);\r\n}\r\n\r\nexport default PokemonCard;","import React, {useEffect, useState} from 'react';\r\n\r\nimport TypeSelect from './TypeSelect';\r\nimport PokemonItem from './PokemonItem';\r\nimport PokemonCard from './PokemonCard';\r\n\r\nconst Pokedex = (props) => {\r\n\r\n\tconst [count, setCount] = useState(12);\r\n\tconst [items, setItems] = useState({});\r\n\tconst [card, setCard] = useState({});\r\n\tconst [type, setType] = useState('all');\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\t//display all type\r\n\t\tif(type === \"all\") {\r\n\t\tfetch(`https://pokeapi.co/api/v2/pokemon/?limit=${count}`, {\r\n\t})\r\n  .then(response => response.json())\r\n  .then(result => {\r\n  \tsetItems(result)\r\n  //console.log(result)\r\n  });\r\n} \r\n\r\n //display specific type\r\nelse {\r\n\r\n//get type url by name\r\nfetch(`https://pokeapi.co/api/v2/type`)\r\n  .then(response => response.json())\r\n  .then(result => {\r\n  \tconst url = (result.results.find((item) => {\r\n  \t\treturn item.name === type;\r\n  \t})).url;\r\n\r\n  \t//get list of pokemon items by type\r\n  \tfetch(url)\r\n  \t.then(response => response.json())\r\n  \t.then(result => {\r\n  \t\t\r\n\t  \tlet resultObject = {};\r\n\t  \tlet items = [];\r\n\t  \tresult.pokemon.forEach((item) => {\r\n\t  \t\titems.push(item.pokemon);\r\n\t  \t})\r\n\r\n\t  \tlet limitedItems = items.slice(0, count);\r\n\t  \tresultObject.results = limitedItems\r\n\t \t\tsetItems(resultObject);\r\n  \t});\r\n  });\r\n}\r\n\r\n}, [count, type]);\r\n\r\n\treturn (\r\n\t\t<div className=\"pokedex\">\r\n\t\t\t<h1>Pokedex</h1>\r\n\t\t\t<div className='pokedex__layout'>\r\n\t\t\t\t<div className=\"pokedex__left\">\r\n\t\t\t\t\t<TypeSelect setType={setType} setCount={setCount}/>\r\n\t\t\t\t\t<div className=\"pokedex__list\">\r\n\t\t\t\t\t\t\t{items.results ? items['results'].map((item) => (\r\n\t\t\t\t\t\t\t\t<PokemonItem key={item.name} url={item.url} setCard={setCard} />\r\n\t\t\t\t\t\t\t)) : null}\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<button className=\"btn-load\" onClick={() => {let newCount = count + 12; setCount(newCount)}}>Load</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"pokedex__right\">\r\n\t\t\t\t\t<PokemonCard card={card}/> \r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Pokedex;","import './App.css';\n\n\nimport Pokedex from './components/Pokedex.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pokedex />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}